version: '3'
services:
    postgres:
        image: postgres:13
        env_file:
            - .env
        volumes:
            - postgres-db-volume:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U airflow
            interval: 5s
            retries: 5
        restart: always
        deploy:
            resources:
                limits: 
                    memory: 150M

    scheduler:
        build:
            context: .
            # args:
            #     AIRFLOW_UID_X: ${AIRFLOW_UID:-50000}
        command: scheduler
        restart: on-failure
        depends_on:
            - postgres
        env_file:
            - .env
        volumes:
            - ./dags:/opt/airflow/dags
            - ./logs:/opt/airflow/logs
            - ./plugins:/opt/airflow/plugins
            - ./scripts:/opt/airflow/scripts
            - ./.google/credentials/:/.google/credentials:ro
            - ./raw:/opt/airflow/raw
        deploy:
            resources:
                limits: 
                    memory: 2g

    webserver:
        build:
            context: .
            # args:
            #     AIRFLOW_UID_X: ${AIRFLOW_UID:-50000}
        entrypoint: ./scripts/entrypoint.sh
        restart: on-failure
        depends_on:
            - postgres
            - scheduler
        env_file:
            - .env
        volumes:
            - ./dags:/opt/airflow/dags
            - ./logs:/opt/airflow/logs
            - ./plugins:/opt/airflow/plugins
            - ./scripts:/opt/airflow/scripts
            - ./.google/credentials:/.google/credentials:ro
            - ./raw:/opt/airflow/raw
        # user: "${AIRFLOW_UID:-50000}:0"
        ports:
            - "8080:8080"
        healthcheck:
            test: ["CMD-SHELL", "-f /home/airflow/airflow-webserver.pid"]
            interval: 30s
            timeout: 30s
            retries: 3
        deploy:
            resources:
                limits: 
                    memory: 1300m

volumes:
  postgres-db-volume: